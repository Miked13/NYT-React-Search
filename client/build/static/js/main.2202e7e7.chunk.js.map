{"version":3,"sources":["components/Header/Header.js","components/Results/Results.js","components/utils/API.js","components/Search/Search.js","components/Saved/Saved.js","components/Navbar/Navbar.js","components/NYTSearch.js","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","Results","_ref","result","saveButton","id","map","headlines","index","key","role","headline","print_headline","href","web_url","target","rel","main","type","onClick","API","getArticles","axios","get","saveArticles","articleData","post","getOneArticle","deleteArticle","delete","search","query","Search","state","startYear","endYear","results","formatStartDate","value","formattedDate","getFullYear","toString","getMonth","getDate","_this","setState","formatEndDate","handleFormSubmit","event","preventDefault","then","res","data","handleResetButton","handleInputChange","_event$target","name","Object","defineProperty","handleArticleSave","newArticle","title","date","pub_date","undefined","url","catch","err","console","log","_this2","this","htmlFor","onChange","DayPickerInput_default","onDayChange","day","components_Results_Results","Component","Saved","saved","formatDate","displayArticles","_id","Date","Navbar","NYTSearch","components_Navbar_Navbar","components_Header_Header","BrowserRouter","Switch","Route","exact","path","component","App","components_NYTSearch","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2202e7e7.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Header.css\";\n\nconst Header = () => (\n  <div className=\"jumbotron\">\n    <h1 className=\"text-center\">\n      <strong>\n        <i className=\"fa fa-newspaper-o\"></i> New York Times Search\n      </strong>\n    </h1>\n  </div>\n);\n\nexport default Header;","import React from \"react\";\nimport \"./Results.css\";\n\nconst Results = ({ result, saveButton }) => (\n    <div className=\"row\">\n        <div className=\"col-sm-12\">\n            <br />\n\n            <div className=\"card\">\n                {/* Card Header */}\n                <div className=\"card-header\">\n                    <strong>\n                        <i className=\"fa fa-table\"></i> Results\n          </strong>\n                </div>\n\n                <div className=\"card-body\" id=\"article-section\">\n                    {result.map((headlines, index) =>\n                        <div key={index} className=\"alert alert-warning\" role=\"alert\">\n                            {headlines.headline.print_headline ?\n                                <a href={headlines.web_url} target = \"_blank\" rel = \"noopener noreferrer\" >{headlines.headline.print_headline}</a>\n                                :\n                                <a href={headlines.web_url} target=\"_blank\" rel = \"noopener noreferrer\">{headlines.headline.main}</a>\n                            }\n                            <button type=\"button\" id={index} onClick={() => saveButton(index)} className=\"float-right btn btn-primary\">Save</button>\n                        </div>\n                    )}\n                </div>\n\n            </div>\n\n        </div>\n    </div>\n);\n\nexport default Results;","import axios from \"axios\";\n\nexport default {\n  getArticles: function() {\n    return axios.get(\"/api/articles\");\n  },\n  saveArticles: function(articleData) {\n    return axios.post(\"/api/articles\", articleData);\n  },\n  getOneArticle: function(id) {\n    return axios.get(\"/api/articles/\" + id);\n  },\n  deleteArticle: function(id) {\n    return axios.delete(\"api/articles/\" + id);\n  },\n  search: function(query) {\n    return axios.post(\"/nyt/\" + query);\n  }\n};","import React, { Component } from \"react\";\nimport \"./Search.css\";\nimport Results from \"../Results\";\nimport API from \"../utils/API\";\nimport DayPickerInput from 'react-day-picker/DayPickerInput';\nimport 'react-day-picker/lib/style.css';\n\n\nclass Search extends Component {\n    state = {\n        search: \"\",\n        startYear: \"\",\n        endYear: \"\",\n        results: []\n    };\n\n    formatStartDate = value => {\n        let formattedDate = value.getFullYear().toString();\n        if ((value.getMonth() + 1) < 10) {\n            formattedDate += \"0\" + (value.getMonth() + 1).toString()\n        } else {\n            formattedDate += (value.getMonth() + 1).toString()\n        }\n        if (value.getDate() < 10) {\n            formattedDate += \"0\" + value.getDate().toString()\n        } else {\n            formattedDate += value.getDate().toString()\n        }\n        this.setState({ startYear: formattedDate })\n        return formattedDate;\n    };\n\n    formatEndDate = value => {\n        let formattedDate = value.getFullYear().toString();\n        if ((value.getMonth() + 1) < 10) {\n            formattedDate += \"0\" + (value.getMonth() + 1).toString()\n        } else {\n            formattedDate += (value.getMonth() + 1).toString()\n        }\n        if (value.getDate() < 10) {\n            formattedDate += \"0\" + value.getDate().toString()\n        } else {\n            formattedDate += value.getDate().toString()\n        }\n        this.setState({ endYear: formattedDate })\n        return formattedDate;\n    };\n\n    handleFormSubmit = event => {\n        event.preventDefault();\n        if (this.state.startYear && this.state.endYear) {\n            API.search(\"&q=\" + this.state.search + \"&begin_date=\" + this.state.startYear + \"&end_date=\" + this.state.endYear)\n                .then(res => {\n                    this.setState({ results: res.data })\n                    this.handleResetButton();\n                })\n        } else {\n            API.search(\"&q=\" + this.state.search)\n                .then(res => {\n                    this.setState({ results: res.data })\n                    this.handleResetButton();\n                });\n        }\n    };\n\n    handleResetButton = () => {\n        this.setState({ search: \"\", startYear: \"\", endYear: \"\" })\n    };\n\n    handleInputChange = event => {\n        const { name, value } = event.target;\n        this.setState({ [name]: value });\n    };\n\n    handleArticleSave = index => {\n        const newArticle = {\n            title:\n                (this.state.results[index].headline.print_headline) ?\n                    this.state.results[index].headline.print_headline\n                    :\n                    this.state.results[index].headline.main,\n            date:\n                (this.state.results[index].pub_date) ?\n                    this.state.results[index].pub_date\n                    :\n                    undefined,\n            url: this.state.results[index].web_url\n        }\n        API.saveArticles(newArticle)\n            .catch(err => console.log(err));\n    };\n\n    render() {\n        return (\n            <div>\n                <div className=\"row\">\n                    <div className=\"col-sm-12\">\n                        <br />\n\n                        <div className=\"card\">\n                            {/* Card Header */}\n                            <div className=\"card-header\">\n                                <strong>\n                                    <i className=\"fa fa-list-alt\"></i> Search\n              </strong>\n                            </div>\n\n                            <div className=\"card-body\">\n                                <form>\n\n                                    {/* Search Box */}\n                                    <div className=\"form-group\">\n                                        <label htmlFor=\"search\">Search Term:</label>\n                                        <input onChange={this.handleInputChange} value={this.state.search} type=\"text\" className=\"form-control\" name=\"search\"></input>\n                                    </div>\n                                    {/* Start Year  */}\n                                    <div className=\"form-group\">\n                                        <label htmlFor=\"start-year\">Start Year:</label>\n                                        <DayPickerInput onDayChange={day => this.formatStartDate(day)} />\n                                    </div>\n                                    {/* End Year */}\n                                    <div className=\"form-group\">\n                                        <label htmlFor=\"end-year\">End Year: </label>\n                                        <DayPickerInput onDayChange={day => this.formatEndDate(day)} />\n                                    </div>\n                                    {/* Submit & Clear Buttons */}\n                                    <button type=\"submit\" onClick={this.handleFormSubmit} className=\"btn btn-default\" id=\"run-search\">\n                                        <i className=\"fa fa-search\"></i> Search\n                </button>\n                                    <button type=\"reset\" onClick={this.handleResetButton} className=\"btn btn-default\" id=\"clear-all\">\n                                        <i className=\"fa fa-trash\"></i> Clear Results\n                </button>\n\n                                </form>\n\n                            </div>\n\n                        </div>\n\n                    </div>\n                </div>\n                <Results\n                    result={this.state.results}\n                    saveButton={this.handleArticleSave}\n                />\n            </div>\n        );\n    };\n};\n\nexport default Search;","import React, { Component } from \"react\";\nimport API from \"../utils/API\";\nimport \"./Saved.css\";\n\nclass Saved extends Component {\n    state = {\n        saved: []\n    };\n\n    componentDidMount() {\n        this.displayArticles();\n    };\n\n    formatDate = value => {\n        return value.getMonth() + 1 + \"/\" + value.getDate() + \"/\" + value.getFullYear();\n    }\n\n    deleteArticle = id => {\n        API.deleteArticle(id)\n            .then(res => this.displayArticles())\n            .catch(err => console.log(err));\n    };\n\n    displayArticles = () => {\n        API.getArticles()\n            .then(res => {\n                this.setState({ saved: res.data })\n                console.log(res.data)\n            })\n            .catch(err => console.log(err));\n    };\n\n    render() {\n        return (\n            <div className=\"row\">\n                <div className=\"col-sm-12\">\n                    <br />\n\n                    <div className=\"card\">\n                        {/* Card Header */}\n                        <div className=\"card-header\">\n                            <strong>\n                                <i className=\"fa fa-table\"></i> Saved Articles\n              </strong>\n                        </div>\n\n                        {/* Saved Articles */}\n                        <div className=\"card-body\" id=\"saved-section\">\n                            {this.state.saved.map(headlines =>\n                                <div key={headlines._id} className=\"saved alert alert-primary\" role=\"alert\">\n                                    <a href={headlines.url} target=\"_blank\" rel = \"noopener noreferrer\">{headlines.title}</a>\n                                    <span>Article Date: {this.formatDate(new Date(headlines.date))}</span>\n                                    <button\n                                        type=\"button\"\n                                        className=\"btn btn-danger\"\n                                        onClick={() => this.deleteArticle(headlines._id)}\n                                    >Remove</button>\n                                </div>\n                            )}\n                        </div>\n\n                    </div>\n\n                </div>\n            </div>\n        );\n    };\n}\n\nexport default Saved;","import React from \"react\";\nimport \"./Navbar.css\";\n\nconst Navbar = () => (\n  <ul className=\"nav bg-dark\">\n    <li className=\"nav-item\">\n      <a className=\"nav-link\" href=\"/\">Search</a>\n    </li>\n    <li className=\"nav-item\">\n      <a className=\"nav-link\" href=\"/saved\">Saved</a>\n    </li>\n  </ul>\n);\n\nexport default Navbar;","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch\n} from \"react-router-dom\";\nimport Header from \"./Header\";\nimport Search from \"./Search\";\nimport Saved from \"./Saved\";\nimport NavBar from \"./Navbar\";\n\nconst NYTSearch = () => (\n  <div className=\"container pb-5\">\n    <NavBar />\n    <Header />\n    <Router>\n    <div>\n      <Switch>\n        <Route exact path=\"/\" component={ Search } />\n        <Route exact path=\"/saved\" component={ Saved } />\n      </Switch>\n    </div>\n    </Router>\n  </div>\n);\n\nexport default NYTSearch;","import React from \"react\";\nimport NYTSearch from \"./components/NYTSearch\";\n\nconst App = () => (\n  <NYTSearch />\n);\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}